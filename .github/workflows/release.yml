name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          # Explicitly define cache path and keys instead of using "cache: true"
          cache-dependency-path: |
            go.sum
            go.mod

      - name: Install dependencies
        run: go mod download

      - name: Run tests
        run: make test

      - name: Run linting
        run: |
          make install-lint-tools
          go vet ./...
          # Temporarily commenting out golangci-lint due to compatibility issues with Go 1.24
          # golangci-lint run

  build:
    name: Build and Release
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
            output_name: devhelper-cli-linux-amd64
          - goos: darwin
            goarch: amd64
            output_name: devhelper-cli-darwin-amd64
          - goos: windows
            goarch: amd64
            output_name: devhelper-cli-windows-amd64.exe
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          # Explicitly define cache path and keys instead of using "cache: true"
          cache-dependency-path: |
            go.sum
            go.mod

      - name: Get tag version
        id: get_version
        shell: bash
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          CURRENT_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
          echo "BUILD_DATE=$CURRENT_DATE" >> $GITHUB_OUTPUT
          COMMIT=$(git rev-parse HEAD || echo "unknown")
          echo "COMMIT=$COMMIT" >> $GITHUB_OUTPUT

      - name: Install dependencies
        run: go mod download

      - name: Build release artifacts
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          echo "Building for $GOOS/$GOARCH"
          go build -v -ldflags "-X github.com/lirtsman/devhelper-cli/cmd.Version=${{ steps.get_version.outputs.VERSION }} -X github.com/lirtsman/devhelper-cli/cmd.BuildDate=${{ steps.get_version.outputs.BUILD_DATE }} -X github.com/lirtsman/devhelper-cli/cmd.Commit=${{ steps.get_version.outputs.COMMIT }}" -o ${{ matrix.output_name }}
          # Make executable for Linux/macOS builds
          if [ "$GOOS" != "windows" ]; then chmod +x ${{ matrix.output_name }}; fi
          ls -la

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.output_name }}
          path: ${{ matrix.output_name }}
          retention-days: 7

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts
      
      - name: Display structure of downloaded files
        run: ls -R ./artifacts

      - name: Move artifacts to root directory
        run: |
          mkdir -p ./release-assets
          cp ./artifacts/devhelper-cli-linux-amd64/devhelper-cli-linux-amd64 ./release-assets/
          cp ./artifacts/devhelper-cli-darwin-amd64/devhelper-cli-darwin-amd64 ./release-assets/
          cp ./artifacts/devhelper-cli-windows-amd64.exe/devhelper-cli-windows-amd64.exe ./release-assets/
          chmod +x ./release-assets/devhelper-cli-linux-amd64
          chmod +x ./release-assets/devhelper-cli-darwin-amd64
          ls -la ./release-assets

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: false
          prerelease: ${{ contains(github.ref, '-rc') || contains(github.ref, '-beta') || contains(github.ref, '-alpha') }}
          body: |
            # DevHelper CLI ${{ github.ref_name }}
            
            ## Installation Instructions
            
            ### Linux
            ```bash
            curl -L https://github.com/lirtsman/devhelper-cli/releases/download/${{ github.ref_name }}/devhelper-cli-linux-amd64 -o /usr/local/bin/devhelper-cli
            chmod +x /usr/local/bin/devhelper-cli
            ```
            
            ### macOS
            ```bash
            curl -L https://github.com/lirtsman/devhelper-cli/releases/download/${{ github.ref_name }}/devhelper-cli-darwin-amd64 -o /usr/local/bin/devhelper-cli
            chmod +x /usr/local/bin/devhelper-cli
            ```
            
            ### Windows
            Download the `devhelper-cli-windows-amd64.exe` file and run it from the command line.
            
            ## Changes
            Please refer to [CHANGELOG.md](https://github.com/lirtsman/devhelper-cli/blob/main/CHANGELOG.md) for details.
          files: |
            ./release-assets/devhelper-cli-linux-amd64
            ./release-assets/devhelper-cli-darwin-amd64
            ./release-assets/devhelper-cli-windows-amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 